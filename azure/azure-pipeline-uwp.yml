name: GrampsView Android

variables:
  - name: solution
    value: '**/*.sln'
  - name: buildPlatform
    value: 'x64'
  - name: buildConfiguration
    value: 'Release'
  - name: appxPackageDir
    value: '$(build.artifactStagingDirectory)\AppxPackages\\'
  - group: uwp-pipeline

trigger: none
pr: none

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - MSBuild
  - Xamarin.Android
  - JDK

schedules:
  - cron: "0 0 * * MON,WED,FRI,SUN"
    displayName: Four day a week build
    branches:
        include:
        - master

steps: 

- task: NuGetCommand@2
  displayName: 'NuGet restore solution'
  inputs:
    restoreSolution: '**/*.sln'


- task: DownloadSecureFile@1
  displayName: 'Download Secret.cs file'
  inputs:
    secureFile: '5c8ddee8-5019-4979-be40-0661f0c58d05'

- task: CopyFiles@2
  displayName: 'Copy Files to: GrampsView/Common/'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: Secret.cs
    TargetFolder: GrampsView/Common/

- task: DownloadSecureFile@1
  name: mySecureFile
  displayName: 'Download GrampsViewUWP.pfx file'
  inputs:
    secureFile: '$(signingCert.SecureFile)'
    #'bf399fb7-13b6-4ca2-aefa-cca2764fbeb3'

- task: CopyFiles@2
  displayName: 'Copy PFX File to: GrampsView'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(signingCert.SecureFile)'
    TargetFolder: '$(signingCert.targetFolder)'

- powershell: |
   Write-Host "Start adding the PFX file to the certificate store."
   
   $pfxpath = '$(signingCert.targetFolder)$(signingCert.SecureFile)'
   Write-Host   $pfxpath
   $password = '$(signingCert.password)'
         
   Add-Type -AssemblyName System.Security
   $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
   $cert.Import($pfxpath, $password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
   $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
   $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
   $store.Add($cert)
   $store.Close()
  
- task: gittools.usegitversion.gitversion-task.UseGitVersion@5
  displayName: GitVersion
  inputs:
    versionSpec: 5.x.x

- task: richardfennellBM.BM-VSTS-Versioning-Task.Version-APPX-Task.VersionAPPX@2
  displayName: 'Version APPX'
  inputs:
    VersionNumber: '$(GitVersion.SemVer).0'
    InjectVersion: true

- task: VSBuild@1
  displayName: 'Build UWP project'
  inputs:
    solution: '**/GrampsView.UWP.csproj'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)"
                  /p:AppxPackageDir="$(appxPackageDir)"
                  /p:AppxBundle=Always
                  /p:UapAppxPackageBuildMode=StoreUpload
                  /p:AppxPackageSigningEnabled=true
                  /p:PackageCertificateThumbprint="$(signingCert.thumbprint)" 
                  /p:PackageCertificateKeyFile="$(signingCert.targetFolder)$(signingCert.SecureFile)"  
                  /p:PackageCertificatePassword="$(signingCert.password)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2 
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\AppxPackages\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: AppCenterDistribute@3
  displayName: 'Deploy $(build.artifactstagingdirectory)\AppxPackages\*.msixupload to Visual Studio App Center'
  inputs:
    serverEndpoint: 'App Center'
    appSlug: '$(appSlug)'
    appFile: '$(build.artifactstagingdirectory)\AppxPackages\*.msixupload'
    symbolsIncludeParentDirectory: false
    symbolsOption: 'UWP'
    releaseNotesOption: 'file'
    releaseNotesFile: 'CHANGELOG.md'
    isSilent: false

