name: GrampsView VSTest
  
variables:
  - name: BuildConfiguration
    value: 'Release'
  - name: Solution
    value: '**/*.sln'
  - name: Projects
    value: '$(Build.SourcesDirectory)/GrampsView.UnitTest.*/*.csproj'
  - name: OutputDirectory
    value: '$(build.binariesDirectory)/$(BuildConfiguration)'

trigger: none
pr: none
 
pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - MSBuild
  - Xamarin.Android
  - JDK

schedules:
  - cron: "0 0 * * MON,WED,FRI,SUN"
    displayName: Four day a week build
    branches:
        include:
        - master

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(Solution)'

- task: DownloadSecureFile@1
  displayName: 'Download secure file: Secret.cs'
  inputs:
    secureFile: 'Secret.cs'

- task: CopyFiles@2
  displayName: 'Copy Files to: GrampsView/Common/'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: Secret.cs
    TargetFolder: GrampsView/Common/

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: "$(Projects)"
    arguments: "--configuration $(BuildConfiguration)"

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: VSTest@2
  inputs:
    #batchingBasedOnAgentsOption: 'autoBatchSize' # Optional. Options: autoBatchSize, customBatchSize
    #batchingBasedOnExecutionTimeOption: 'autoBatchSize' # Optional. Options: autoBatchSize, customTimeBatchSize
    #codeCoverageEnabled: False # Optional
    #collectDumpOn: 'onAbortOnly' # Optional. Options: onAbortOnly, always, never
    configuration: '$(BuildConfiguration)'
    #customBatchSizeValue: '10' # Required when distributionBatchType == BasedOnTestCases && BatchingBasedOnAgentsOption == CustomBatchSize
    #customRunTimePerBatchValue: '60' # Required when distributionBatchType == BasedOnExecutionTime && BatchingBasedOnExecutionTimeOption == CustomTimeBatchSize
    #diagnosticsEnabled: false # Optional
    #distributionBatchType: 'basedOnTestCases' # Optional. Options: basedOnTestCases, basedOnExecutionTime, basedOnAssembly
    #dontDistribute: False # Optional
    #failOnMinTestsNotRun: false # Optional
    #minimumExpectedTests: '1' # Optional
    #otherConsoleOptions: # Optional
    #overrideTestrunParameters: # Optional
    #pathtoCustomTestAdapters: # Optional
    platform: '$(buildPlatform)'
    #publishRunAttachments: true # Optional
    #rerunFailedTestCasesMaxLimit: '5' # Optional
    #rerunFailedTests: False # Optional
    #rerunFailedThreshold: '30' # Optional
    #rerunMaxAttempts: '3' # Optional
    #rerunType: 'basedOnTestFailurePercentage' # Optional. Options: basedOnTestFailurePercentage, basedOnTestFailureCount
    #runAllTestsAfterXBuilds: '50' # Optional
    #runInParallel: False # Optional
    #runOnlyImpactedTests: False # Optional
    #runSettingsFile: # Optional
    #runTestsInIsolation: False # Optional
    searchFolder: '$(System.DefaultWorkingDirectory)' 
    #tcmTestRun: '$(test.RunId)' # Optional
    testAssemblyVer2: |
      **\Release\UnitTestProject1.build.appxrecipe
      !**\*TestAdapter.dll
      !**\obj\** 
      **\*test*.dll
    #testConfiguration: # Required when testSelector == TestPlan
    #testFiltercriteria: # Optional
    #testPlan: # Required when testSelector == TestPlan
    #testRunTitle: # Optional
    testSelector: 'testAssemblies'
    #testSuite: # Required when testSelector == TestPlan
    #uiTests: false # Optional
    #vstestLocation: # Optional
    #vstestLocationMethod: 'version' # Optional. Options: version, location
    #vsTestVersion: 'latest' # Optional. Options: latest, 16.0, 15.0, 14.0, toolsInstaller
    